multiNamespace:
  # List of namespaces to deploy to
  namespaces:
    - name: "work-iso-sc-ns1"
    - name: "work-iso-sc-ns2" 
    - name: "work-iso-sc-ns3"

# Global settings that apply to all namespaces
global:
  replicaCount: 2

# Things that are overrideable by namespace - replicaCount, nodeSelector, affinity, tolerations, topologySpreadConstraints
namespaceOverrides:
  work-iso-sc-ns1:
    replicaCount: 30
    topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/node
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: busybox-chart
          busybox-chart.namespace: work-iso-sc-ns1
    # # Example: Run on specific node type
    # nodeSelector:
    #   disktype: ssd
    #   zone: us-west1-a
  work-iso-sc-ns2:
    replicaCount: 5
    # Example: Use affinity to prefer certain nodes
    # affinity:
    #   nodeAffinity:
    #     preferredDuringSchedulingIgnoredDuringExecution:
    #     - weight: 100
    #       preference:
    #         matchExpressions:
    #         - key: zone
    #           operator: In
    #           values:
    #           - us-west1-b
  work-iso-sc-ns3:
    replicaCount: 10
    # Example: Use tolerations to allow scheduling on tainted nodes
    # tolerations:
    # - key: "high-performance"
    #   operator: "Equal"
    #   value: "true"
    #   effect: "NoSchedule"
    # # Can also override multiple settings together
    # nodeSelector:
    #   instance-type: "high-memory"
    # # Example: Use topology spread constraints to distribute pods across zones/nodes
    # topologySpreadConstraints:
    # - maxSkew: 1
    #   topologyKey: topology.kubernetes.io/zone
    #   whenUnsatisfiable: DoNotSchedule
    #   labelSelector:
    #     matchLabels:
    #       app.kubernetes.io/name: busybox-chart
    #       busybox-chart.namespace: work-iso-sc-ns3

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

nodeSelector: {}

tolerations: []

affinity: {}

topologySpreadConstraints: []
